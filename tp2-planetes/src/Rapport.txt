Q1: Dans le nuanceur de sommets, si on souhaite calculer la profondeur du
    sommet dans le repère de la caméra, on peut utiliser cette formule :

    « out float profondeur = -( matrVisu * matrModel * Vertex ).z; »

    Pourquoi doit-on inverser le signe du résultat calculé ?

	Dans le repère de la caméra, l'axe x est dirigé de gauche à droite,
	l'axe y de bas en haut. L'axe z est donc orienté vers la caméra, les
	profondeurs positives sont donc représentées derrière la caméra.
	Les objets vus dans la scène ont une profondeur négative.
	Il faut donc inverser le signe du résultat calculé pour 
	avoir la profondeur du sommet dans le repère de la caméra.


Q2: Lorsqu'on calcule la distance à la caméra pour faire un effet de
    profondeur dans le nuanceur de fragments, que se passe-t-il si on
    remplace

    « d = gl_FragCoord.z / gl_FragCoord.w; »

    par seulement l'utilisation de z ou de w avec

    « d = gl_FragCoord.z; » ou
    « d = gl_FragCoord.w; » ?

    Comment expliquez-vous les comportements observés dans un cas ou l'autre?

	Les objets représentés sont tous à z constant après la projection dans le
	plan de la caméra, la coordonnée homogène w contient l'indication de profondeur
	dans le plan de la caméra.
	Pour obtenir la vraie profondeur dans l'espace qui doit être présenté, il
	faut alors bien calculer z/w.
